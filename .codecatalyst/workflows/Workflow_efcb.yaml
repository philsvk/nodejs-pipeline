Name: pull-request
SchemaVersion: "1.0"
Triggers:
  - Type: PULLREQUEST
    Events:
      - OPEN
      - REVISION
    Branches:
      - dev
Actions:
  Build:
    Actions:
      SecretScan:
        # Identifies the action. Do not modify this value.
        Identifier: aws/github-actions-runner@v1.0.0

        # Specifies the source and/or artifacts to pass to the action as input.
        Inputs:
          # Optional
          Sources:
            - WorkflowSource # This specifies that the action requires this Workflow as a source

        # Defines the action's properties.
        Configuration:
          # Required - Steps are sequential instructions that run shell commands
          # Action URL: https://github.com/marketplace/actions/trufflehog-oss
          # Please visit the action URL to look for examples on the action usage.
          # Be aware that a new version of the action could be available on GitHub.
          Steps:
            - uses: trufflesecurity/trufflehog@v3.47.0
              with:
                path: 'https://github.com/philsvk/nodejs-pipeline.git' # Required; description: Repository path
                # base: ' ' # Optional; description: Start scanning from here (usually main branch).
                # head: ' ' # Optional; description: Scan commits until here (usually dev branch).
                # extra_args: ' ' # Optional; description: Extra args to be passed to the trufflehog cli.
      SCA:
        Identifier: aws/github-actions-runner@v1
        Inputs:
          Sources:
            - WorkflowSource
        Configuration:
          Steps:
            - name: Trivy Vulnerability Scanner
              uses: aquasecurity/trivy-action@master
              with:
                scan-type: fs
                ignore-unfixed: true
                format: sarif
                output: report.sarif
                security-checks: vuln,config,secret
        Outputs:
          Reports:
            SCA:
              Format: SARIFSCA
              IncludePaths:
                - report.sarif
              SuccessCriteria:
                Vulnerabilities:
                  Severity: HIGH
                  Number: 0
      DockerBuild:
        Identifier: aws/build@v1
        Inputs:
          Sources:
            - WorkflowSource
        Configuration:
          Steps:
            - Run: echo "Building Docker Image"
            - Run: docker build -t node-app .
            - Run: echo "Running Unit Test"
            - Run: docker run --rm node-app:latest npm test
            - Run: echo "Run linting"
            - Run: docker run --rm node-app:latest npm run lint
        Compute:
          Type: EC2
        Outputs:
          AutoDiscoverReports:
            Enabled: true
            ReportNamePrefix: build
            SuccessCriteria:
              PassRate: 100
RunMode: SUPERSEDED
